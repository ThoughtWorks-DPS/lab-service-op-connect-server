---
version: 2.1

orbs:
  terraform: twdps/terraform@dev:latest
  # used for github-release-notes feature
  executor-tools: twdps/executor-tools@0.3.0

# ==== global pipeline parameters

parameters:
  terraform-version:
    description: terraform version for all jobs
    type: string
    default: "1.1.9"
  executor-image:
    description: image to use for terraform runs
    type: string
    default: twdps/circleci-infra-aws:alpine-1.5.0

# git push: deploy sandbox
on-push-main: &on-push-main
  branches:
    only: /main/
  tags:
    ignore: /.*/

# git tag: release to preview cluster
on-tag-main: &on-tag-main
  branches:
    ignore: /.*/
  tags:
    only: /.*/

commands:

  set-environment:
    description: set terraform backend
    steps:
      - run:
          name: set ~/.terraformrc
          command: bash scripts/tf_backend.sh

jobs:

  account-level-credentials:
    parameters:
      instance:
        description: name of environments file
        type: string
      key:
        description: name of credential to create
        type: string
    docker:
      - image: << pipeline.parameters.executor-image >>
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: create secretes manager key entry if not already present
          command: |
            bash scripts/create_secrets_manager_entry.sh << parameters.instance>> << parameters.key >>

workflows:
  version: 2

  lab-service-op-connect-server-pipeline:
    jobs:
        # sandbox deployment
        - account-level-credentials:
            name: nonprod-account-credentials
            instance: sandbox
            key: "sandbox-op-connect-credential-file"

        - terraform/plan:
            name: sandbox-change-plan
            workspace: sandbox
            var-file: environments/sandbox.json
            extra-terraform-args: -var="op_credentials_file_base64=${SANDBOX_OP_CREDENTIAL_FILE_BASE64}"
            terraform-version: << pipeline.parameters.terraform-version >>
            before-terraform:
              - set-environment
            filters: *on-push-main

        - approve-sandbox-changes:
            type: approval
            requires:
              - sandbox-change-plan
            filters: *on-push-main

        - terraform/apply:
            name: apply-sandbox-changes
            workspace: sandbox
            var-file: environments/sandbox.json
            extra-terraform-args: -var="op_credentials_file_base64=${SANDBOX_OP_CREDENTIAL_FILE_BASE64}"
            terraform-version: << pipeline.parameters.terraform-version >>
            before-terraform:
              - set-environment
            requires:
              - approve-sandbox-changes
            filters: *on-push-main
        
        - approve-sandbox-destroy:
            type: approval
            requires:
              - sandbox-change-plan
            filters: *on-push-main

        - terraform/destroy:
            name: destroy-sandbox-changes
            workspace: sandbox
            var-file: environments/sandbox.json
            extra-terraform-args: -var="op_credentials_file_base64=${SANDBOX_OP_CREDENTIAL_FILE_BASE64}"
            terraform-version: << pipeline.parameters.terraform-version >>
            before-terraform:
              - set-environment
            requires:
              - approve-sandbox-destroy
            filters: *on-push-main